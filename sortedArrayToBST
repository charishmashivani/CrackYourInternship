#Day 16

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def sortedArrayToBST(self, nums):
        def convertToBST(left, right):
            if left > right:
                return None
            
            mid = (left + right) // 2
            root = TreeNode(nums[mid])
            
            root.left = convertToBST(left, mid - 1)
            root.right = convertToBST(mid + 1, right)
            
            return root
        
        return convertToBST(0, len(nums) - 1)

        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        
